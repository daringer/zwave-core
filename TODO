
- OZWCP replacement (top top top prio)
--------------------------------------
	- urgently need this to be ready to maintain the network without all the HA overhead
	- target nearly reached, some "actions" from the controller are missing
		- leave the hard/soft reset stuff away first, don't think something can happen
			but just for a more secure feeling, either way we need some mechanism to avoid
			accidental clicking/activation (or have this activated by some config)
			greetings to the openhab UI designers :)
	- missing:
		[controller] secure inclusion, exclusion, remove failed node, create_new_primary,
								 delete_all_return_routes, has_node_failed, is_bridge_controller, is_locked,
								 is_primary_controller, is_static_update_controller, receive_configuration,
								 remove_node, replication_send, send_queue_count(!), ctrl-stats,
								 transfer_primary_role
		[node+value] nearly 100% I guess, some config values do not save, do we really need: set_config()?
		[network   ] mostly done!
		[group     ] nothing done, but easy and fast
		[scenes    ] very low prio, is it actually used?
		[mmh, yes? ] do_poll_statistics()?, get_stats_label(), poll_stats(?), request_network_update,
							   request_node_neighbor_update, send_node_information,
								 (most are just the 1:N versions of the node specific ones)
		[not now:  ] hard_reset, soft-reset (once we feel like in a "beta", I would pull them in)

	- looks quite a lot, but most are actually already there, there is just no "button" for it
		REST-api already is generic enough to support all of them...

- MQTT (top prio - once ozwcp can be replaced)
----------------------------------------------
	- need a "database", how about yaml ?
	- the database contains a mapping from value(s) to topics and any additional information
	- overall I see no need for subscriptions, just act as a publisher as client
	- the mapping can easily be realized within the gui, in fact:
		- 1st view: selection/naming of the topic
		- 2nd view: selection of value(s) to be mapped to this topic(s)
		- 3rd view: additional information: polling, QoS and allow a one-liner python
								to merge/filter operations on the data
	- finally also include a broker, what might lead to a challenge, due to the whole async story
		HBMQTT shall be the designated MQTT client/broker

- Robustness / Feature Completion (2nd prio)
--------------------------------------------
	- feedback for missing permissions on zwave device

	- check and correct errorcode on python server side
		-> come up with a defined set of errorcodes and their description

- Anything else (for 10mins fun ;D)
-----------------------------------
	- for ANY creation of elements use: (33% faster)
	  - $(document.createElement('div'));

	- in relation to the topic below: maybe accept any value_id at least with a "weak" reference, or
		some kind of "value"-queue, because likely there are some situations in which these may be
		too early or the node was not yet fully included into our data-structures, mmmh

	- generally consume the ControllerCommant event types properly and make them available to the user
		- after an inclusion, directly get all node information about the newly included device

	- states(s) generated by the Ajax()-builder class are not yet properly populated and consumed
		on frontend side

	- while using the frontend, use window.history.pushState("name", "title", "/frontend/show/x")
		for e.g., detail views from nodes in order to be "re-load-able"


